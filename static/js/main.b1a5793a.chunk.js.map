{"version":3,"sources":["models/Quizzes.js","contexts/quizzes.js","components/Question/index.js","components/Questions/index.js","pages/Main/index.js","App.js","index.js"],"names":["getRandomAnswer","movie","getRandomMovie","answers","quizzes","sample","movies","Object","keys","answerTemplate","answer","correct","checked","disabled","getAnswers","sentences","map","sentence","asnwersWithTemplate","amount","initialMovies","includes","push","length","getMovies","find","item","getMovieBySentence","index","options","shuffle","setup","initialAnswers","getSentences","getPoints","reduce","points","quizz","Boolean","getCorrectAnswer","QuizzesContext","createContext","QuizzesProvider","children","useState","setQuizzes","started","setStarted","store","handleStartGame","Quizzes","handleChangeCheck","quizzIndex","newQuizzes","newOptions","handleFinishGame","itemOption","alert","Provider","value","Question","className","FormControl","component","RadioGroup","option","FormControlLabel","key","label","control","Radio","onChange","Questions","Box","display","alignItems","justifyContent","width","height","flexDirection","marginTop","marginBottom","Button","variant","onClick","color","Main","useContext","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1a5793a.chunk.js","sourcesContent":["import quizzes from '../quizzes.json';\nimport { sample, shuffle } from 'lodash';\n\nexport const getSentences = (amount, initialAnswers = []) => {\n  let answers = initialAnswers;\n\n  do {\n    const answer = getRandomAnswer();\n\n    if (!answers.includes(answer)) {\n      answers.push(answer);\n    }\n  } while (answers.length < amount);\n\n  return answers;\n}\n\nexport const getMovies = (amount, initialMovies = []) => {\n  let movies = initialMovies;\n\n  do {\n    const movie = getRandomMovie();\n\n    if (!movies.includes(movie)) {\n      movies.push(movie);\n    }\n  } while (movies.length < amount);\n\n  return movies;\n}\n\nconst getRandomAnswer = () => {\n  const movie = getRandomMovie();\n  const answers = quizzes[movie];\n  const answer = sample(answers);\n\n  return answer;\n}\n\nconst getRandomMovie = () => {\n  const movies = Object.keys(quizzes);\n  const movie = sample(movies);\n\n  return movie;\n}\n\nconst answerTemplate = (answer, correct, checked = false, disabled = false) => ({\n  answer, correct, checked, disabled\n});\n\nconst getMovieBySentence = sentence => {\n  const movies = Object.keys(quizzes);\n  const movie = movies.find(item => quizzes[item].includes(sentence));\n\n  return movie;\n}\n\nconst getAnswers = sentences => sentences.map(sentence => {\n  const rightAnswer = getMovieBySentence(sentence);\n  const asnwers = getMovies(5, [ rightAnswer ]);\n  const asnwersWithTemplate = asnwers.map((item, index) =>\n    index ? answerTemplate(item, false) : answerTemplate(item, true)\n  );\n  const options = shuffle(asnwersWithTemplate);\n\n  return { sentence, options }\n});\n\nexport const setup = () => {\n  const sentences = getSentences(5);\n  const answers = getAnswers(sentences);\n\n  return answers;\n};\n\nexport const updateOption = (quizzes, quizzIndex, answer) => {\n  const newQuizzes = quizzes.map((item, index) => {\n    if (index === quizzIndex) {\n      const newOptions = item.options.map(item => \n        item.answer === answer ? { ...item, checked: true } : { ...item, checked: false }\n      );\n\n      return { ...item, options: newOptions };\n    }\n\n    return { ...item }\n  });\n\n  return newQuizzes;\n}\n\nconst getCorrectAnswer = quizz => quizz.options.find(item => Boolean(item.correct));\n\nconst getPoints = quizzes => quizzes.reduce((points, quizz) => {\n  const correctAnswer = getCorrectAnswer(quizz);\n\n  if (correctAnswer.checked) {\n    return points + 1;\n  }\n\n  return points;\n}, 0)\n\nexport const finishGame = quizzes => {\n  const newQuizzes = quizzes.map(item => ({\n    ...item,\n    options: item.options.map(itemOption => ({\n      ...itemOption,\n      disabled: true\n    }))\n  }));\n  const points = getPoints(quizzes);\n\n  return { quizzes: newQuizzes, points };\n}\n","import React, { createContext, useState } from 'react';\nimport * as Quizzes from '../models/Quizzes';\n\nexport const QuizzesContext = createContext();\n\nexport const QuizzesProvider = ({ children }) => {\n  const [ quizzes, setQuizzes ] = useState([]);\n  const [ started, setStarted ] = useState(false);\n\n  const handleStartGame = () => {\n    setStarted(true);\n    setQuizzes(Quizzes.setup());\n  }\n\n  const handleChangeCheck = (quizzIndex, answer) => {\n    const newQuizzes = Quizzes.updateOption(quizzes, quizzIndex, answer);\n\n    setQuizzes(newQuizzes);\n  }\n\n  const handleFinishGame = () => {\n    const { quizzes: newQuizzes, points } = Quizzes.finishGame(quizzes);\n\n    alert(`VocÃª acertou ${points} de ${newQuizzes.length} perguntas.`);\n\n    setStarted(false);\n    setQuizzes(newQuizzes);\n  }\n\n  const store = { quizzes, started, handleStartGame, handleChangeCheck, handleFinishGame }\n\n  return (\n    <QuizzesContext.Provider value={store}>\n      { children }\n    </QuizzesContext.Provider>\n  )\n}\n","import React from 'react';\nimport { FormControl, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\n\nimport './index.scss';\n\nconst Question = ({\n  sentence,\n  options,\n  handleChangeCheck\n}) => (\n  <div className=\"Question\">\n    <h2 className=\"Question__title\">\n      { sentence }\n    </h2>\n    <FormControl component=\"fieldset\">\n      <RadioGroup>\n        {\n          options.map((option, index) => (\n            <FormControlLabel\n              key={`${option.answer}-${index}`}\n              value={option.answer}\n              label={option.answer}\n              control={<Radio />}\n              checked={option.checked}\n              onChange={() => handleChangeCheck(option.answer)}\n              disabled={option.disabled}\n            />\n          ))\n        }\n      </RadioGroup>\n    </FormControl>\n  </div>\n);\n\nexport default Question;\n","import React from 'react';\nimport Question from '../Question';\nimport { Button, Box } from '@material-ui/core';\n\nconst Questions = ({\n  quizzes,\n  handleChangeCheck,\n  handleFinishGame\n}) => (\n  <div className=\"Questions\">\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      width=\"100vw\"\n      height=\"auto\"\n      flexDirection=\"column\"\n    >\n      {\n        quizzes.map((item, index) => (\n          <Question\n            key={`${item.sentence}-${index}`}\n            sentence={item.sentence}\n            options={item.options}\n            handleChangeCheck={answer => handleChangeCheck(index, answer)}\n          />\n        ))\n      }\n      <Box marginTop=\"30px\" marginBottom=\"30px\">\n        <Button variant=\"contained\" onClick={handleFinishGame} color=\"primary\">\n          Checar respostas\n        </Button>\n      </Box>\n    </Box>\n  </div>  \n);\n\nexport default Questions;\n","import React, { useContext } from 'react';\nimport { QuizzesContext } from '../../contexts/quizzes';\nimport { Box, Button } from '@material-ui/core';\nimport Questions from '../../components/Questions';\n\nconst Main = () => {\n  const {\n    started,\n    handleStartGame,\n    quizzes,\n    handleChangeCheck,\n    handleFinishGame\n  } = useContext(QuizzesContext);\n\n  return (\n    started ? (\n      <>\n        <Questions\n          quizzes={quizzes}\n          handleChangeCheck={handleChangeCheck}\n          handleFinishGame={handleFinishGame}\n        />\n      </>\n    ) : (\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        width=\"100vw\"\n        height=\"100vh\"\n      >\n        <Button variant=\"contained\" onClick={handleStartGame} color=\"primary\">\n          ComeÃ§ar!\n        </Button>\n      </Box>\n    )\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport Main from './pages/Main';\nimport { QuizzesProvider } from './contexts/quizzes';\n\nconst App = () => (\n  <QuizzesProvider>\n    <Main />\n  </QuizzesProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}