{"version":3,"sources":["models/Quizzes.js","contexts/quizzes.js","pages/Main/index.js","App.js","index.js"],"names":["getRandomAnswer","movie","getRandomMovie","answers","quizzes","sample","movies","Object","keys","answerTemplate","answer","correct","getAnswers","sentences","map","sentence","asnwersWithTemplate","amount","initialMovies","includes","push","length","getMovies","find","item","getMovieBySentence","index","options","shuffle","setup","initialAnswers","getSentences","QuizzesContext","createContext","QuizzesProvider","children","useState","setQuizzes","started","setStarted","store","handleStartGame","Quizzes","Provider","value","Main","useContext","Box","display","alignItems","justifyContent","width","height","Button","variant","onClick","color","App","ReactDOM","render","document","getElementById"],"mappings":"6jCA+BMA,EAAkB,WACtB,IAAMC,EAAQC,IACRC,EAAUC,EAAQH,GAGxB,OAFeI,iBAAOF,IAKlBD,EAAiB,WACrB,IAAMI,EAASC,OAAOC,KAAKJ,GAG3B,OAFcC,iBAAOC,IAKjBG,EAAiB,SAACC,EAAQC,GAAT,MAAsB,CAC3CD,SAAQC,YAUJC,EAAa,SAAAC,GAAS,OAAIA,EAAUC,KAAI,SAAAC,GAC5C,IAEMC,EA3CiB,SAACC,GAAgC,IAAxBC,EAAuB,uDAAP,GAC5CZ,EAASY,EAEb,EAAG,CACD,IAAMjB,EAAQC,IAETI,EAAOa,SAASlB,IACnBK,EAAOc,KAAKnB,SAEPK,EAAOe,OAASJ,GAEzB,OAAOX,EA+BSgB,CAAU,EAAG,CATJ,SAAAP,GAIzB,OAHeR,OAAOC,KAAKJ,GACNmB,MAAK,SAAAC,GAAI,OAAIpB,EAAQoB,GAAML,SAASJ,MAMrCU,CAAmBV,KAEHD,KAAI,SAACU,EAAME,GAAP,OAC9BjB,EAAee,GAAvBE,MAIF,MAAO,CAAEX,WAAUY,QAFHC,kBAAQZ,QAKba,EAAQ,WACnB,IAAMhB,EAlEoB,SAACI,GAAiC,IAAzBa,EAAwB,uDAAP,GAChD3B,EAAU2B,EAEd,EAAG,CACD,IAAMpB,EAASV,IAEVG,EAAQgB,SAAST,IACpBP,EAAQiB,KAAKV,SAERP,EAAQkB,OAASJ,GAE1B,OAAOd,EAuDW4B,CAAa,GAG/B,OAFgBnB,EAAWC,ICnEhBmB,EAAiBC,0BAEjBC,EAAkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACfC,mBAAS,IADM,mBACvChC,EADuC,KAC9BiC,EAD8B,OAEfD,oBAAS,GAFM,mBAEvCE,EAFuC,KAE9BC,EAF8B,KASzCC,EAAQ,CAAEpC,UAASkC,UAASG,gBALV,WACtBF,GAAW,GACXF,EAAWK,OAKb,OACE,kBAACV,EAAeW,SAAhB,CAAyBC,MAAOJ,GAC5BL,I,gBCGOU,EAhBF,WAAO,IAAD,EAC6BC,qBAAWd,GAAjDM,EADS,EACTA,QAASG,EADA,EACAA,gBADA,EACiBrC,QAElC,OACEkC,EACE,2CAEA,kBAACS,EAAA,EAAD,CAAKC,QAAQ,OAAOC,WAAW,SAASC,eAAe,SAASC,MAAM,QAAQC,OAAO,SACnF,kBAACC,EAAA,EAAD,CAASC,QAAQ,YAAYC,QAASd,EAAiBe,MAAM,WAA7D,iBCHOC,EANH,kBACV,kBAAC,EAAD,KACE,kBAAC,EAAD,Q,MCAJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8b9bd760.chunk.js","sourcesContent":["import quizzes from '../quizzes.json';\nimport { sample, shuffle } from 'lodash';\n\nexport const getSentences = (amount, initialAnswers = []) => {\n  let answers = initialAnswers;\n\n  do {\n    const answer = getRandomAnswer();\n\n    if (!answers.includes(answer)) {\n      answers.push(answer);\n    }\n  } while (answers.length < amount);\n\n  return answers;\n}\n\nexport const getMovies = (amount, initialMovies = []) => {\n  let movies = initialMovies;\n\n  do {\n    const movie = getRandomMovie();\n\n    if (!movies.includes(movie)) {\n      movies.push(movie);\n    }\n  } while (movies.length < amount);\n\n  return movies;\n}\n\nconst getRandomAnswer = () => {\n  const movie = getRandomMovie();\n  const answers = quizzes[movie];\n  const answer = sample(answers);\n\n  return answer;\n}\n\nconst getRandomMovie = () => {\n  const movies = Object.keys(quizzes);\n  const movie = sample(movies);\n\n  return movie;\n}\n\nconst answerTemplate = (answer, correct) => ({\n  answer, correct\n});\n\nconst getMovieBySentence = sentence => {\n  const movies = Object.keys(quizzes);\n  const movie = movies.find(item => quizzes[item].includes(sentence));\n\n  return movie;\n}\n\nconst getAnswers = sentences => sentences.map(sentence => {\n  const rightAnswer = getMovieBySentence(sentence);\n  const asnwers = getMovies(5, [ rightAnswer ]);\n  const asnwersWithTemplate = asnwers.map((item, index) =>\n    index ? answerTemplate(item, false) : answerTemplate(item, true)\n  );\n  const options = shuffle(asnwersWithTemplate);\n\n  return { sentence, options }\n});\n\nexport const setup = () => {\n  const sentences = getSentences(5);\n  const answers = getAnswers(sentences);\n\n  return answers;\n};\n","import React, { createContext, useState } from 'react';\nimport * as Quizzes from '../models/Quizzes';\n\nexport const QuizzesContext = createContext();\n\nexport const QuizzesProvider = ({ children }) => {\n  const [ quizzes, setQuizzes ] = useState([]);\n  const [ started, setStarted ] = useState(false);\n\n  const handleStartGame = () => {\n    setStarted(true);\n    setQuizzes(Quizzes.setup());\n  }\n\n  const store = { quizzes, started, handleStartGame }\n\n  return (\n    <QuizzesContext.Provider value={store}>\n      { children }\n    </QuizzesContext.Provider>\n  )\n}\n","import React, { useContext } from 'react';\nimport { QuizzesContext } from '../../contexts/quizzes';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\n\nconst Main = () => {\n  const { started, handleStartGame, quizzes } = useContext(QuizzesContext);\n\n  return (\n    started ? (\n      <h1>Começou!</h1>\n    ) : (\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" width=\"100vw\" height=\"100vh\">\n        <Button  variant=\"contained\" onClick={handleStartGame} color=\"primary\">\n          Começar!\n        </Button>\n      </Box>\n    )\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport Main from './pages/Main';\nimport { QuizzesProvider } from './contexts/quizzes';\n\nconst App = () => (\n  <QuizzesProvider>\n    <Main />\n  </QuizzesProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}