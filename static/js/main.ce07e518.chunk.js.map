{"version":3,"sources":["services/api.js","services/GameService.js","models/Quizzes.js","contexts/quizzes.js","components/Question/index.js","components/Questions/index.js","components/Loading/index.js","pages/Main/index.js","App.js","index.js"],"names":["require","config","api","axios","create","baseURL","process","headers","setup","a","get","data","quizzTemplate","sentence","options","answers","map","item","answerTemplate","answer","correct","checked","disabled","callback","GameService","quizzes","quizzesWithTemplate","getPoints","reduce","points","quizz","find","Boolean","getCorrectAnswer","QuizzesContext","createContext","QuizzesProvider","children","useState","setQuizzes","started","setStarted","loading","setLoading","store","handleStartGame","Quizzes","quizzesApi","handleChangeCheck","quizzIndex","newQuizzes","index","newOptions","handleFinishGame","itemOption","alert","length","Provider","value","answerClass","finished","Question","className","FormControl","component","RadioGroup","option","key","FormControlLabel","label","control","Radio","onChange","Questions","Box","display","alignItems","justifyContent","width","height","flexDirection","marginTop","marginBottom","Button","variant","onClick","color","Loading","Main","useContext","margin","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce07e518.chunk.js","sourcesContent":["import axios from 'axios';\n\nrequire('dotenv').config();\n\nconst apiUrl = process.env.REACT_APP_URL_API;\n\nconst api = axios.create({\n  baseURL: apiUrl,\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\n  }\n});\n\nexport default api;\n","import api from './api';\n\nexport const setup = async () => {\n  const { data } = await api.get('setup');\n\n  return data;\n}\n","import * as GameService from '../services/GameService';\n\nconst quizzTemplate = ({\n  sentence,\n  answers\n}) => ({\n  sentence,\n  options: answers.map(item => answerTemplate(item.answer, item.correct))\n});\n\nconst answerTemplate = (answer, correct, checked = false, disabled = false) => ({\n  answer, correct, checked, disabled\n});\n\nexport const setup = async (callback) => {\n  const { quizzes } = await GameService.setup();\n  const quizzesWithTemplate = quizzes.map(quizzTemplate);\n\n  return callback(quizzesWithTemplate);\n};\n\nexport const updateOption = (quizzes, quizzIndex, answer) => {\n  const newQuizzes = quizzes.map((item, index) => {\n    if (index === quizzIndex) {\n      const newOptions = item.options.map(item => \n        item.answer === answer ? { ...item, checked: true } : { ...item, checked: false }\n      );\n\n      return { ...item, options: newOptions };\n    }\n\n    return { ...item }\n  });\n\n  return newQuizzes;\n}\n\nconst getCorrectAnswer = quizz => quizz.options.find(item => Boolean(item.correct));\n\nconst getPoints = quizzes => quizzes.reduce((points, quizz) => {\n  const correctAnswer = getCorrectAnswer(quizz);\n\n  if (correctAnswer.checked) {\n    return points + 1;\n  }\n\n  return points;\n}, 0)\n\nexport const finishGame = quizzes => {\n  const newQuizzes = quizzes.map(item => ({\n    ...item,\n    options: item.options.map(itemOption => ({\n      ...itemOption,\n      disabled: true\n    }))\n  }));\n  const points = getPoints(quizzes);\n\n  return { quizzes: newQuizzes, points };\n}\n","import React, { createContext, useState } from 'react';\nimport * as Quizzes from '../models/Quizzes';\n\nexport const QuizzesContext = createContext();\n\nexport const QuizzesProvider = ({ children }) => {\n  const [ quizzes, setQuizzes ] = useState([]);\n  const [ started, setStarted ] = useState(false);\n  const [ loading, setLoading ] = useState(false);\n\n  const handleStartGame = () => {\n    setLoading(true);\n\n    const setupCallback = quizzesApi => {\n      setQuizzes(quizzesApi);\n      setStarted(true);\n      setLoading(false);\n    }\n\n    setQuizzes(Quizzes.setup(setupCallback));\n  }\n\n  const handleChangeCheck = (quizzIndex, answer) => {\n    const newQuizzes = Quizzes.updateOption(quizzes, quizzIndex, answer);\n\n    setQuizzes(newQuizzes);\n  }\n\n  const handleFinishGame = () => {\n    const { quizzes: newQuizzes, points } = Quizzes.finishGame(quizzes);\n\n    alert(`VocÃª acertou ${points} de ${newQuizzes.length} perguntas.`);\n\n    setStarted(false);\n    setQuizzes(newQuizzes);\n  }\n\n  const store = {\n    quizzes, started,\n    handleStartGame, handleChangeCheck,\n    handleFinishGame, loading\n  };\n\n  return (\n    <QuizzesContext.Provider value={store}>\n      { children }\n    </QuizzesContext.Provider>\n  )\n}\n","import React from 'react';\nimport { FormControl, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\n\nimport './index.scss';\n\nconst answerClass = (finished, correct) => \n  `\n    Question__answer\n    ${ finished && correct ? 'Question__answer--correct': '' }\n  `;\n\nconst Question = ({\n  sentence,\n  options,\n  handleChangeCheck,\n  finished\n}) => (\n  <div className=\"Question\">\n    <h2 className=\"Question__title\">\n      { sentence }\n    </h2>\n    <FormControl component=\"fieldset\">\n      <RadioGroup>\n        {\n          options.map((option, index) => (\n            <div\n              className={answerClass(finished, option.correct)}\n              key={`${option.answer}-${index}`}\n            >\n              <FormControlLabel\n                value={option.answer}\n                label={option.answer}\n                control={<Radio />}\n                checked={option.checked}\n                onChange={() => handleChangeCheck(option.answer)}\n                disabled={option.disabled}\n              />\n            </div>\n          ))\n        }\n      </RadioGroup>\n    </FormControl>\n  </div>\n);\n\nexport default Question;\n","import React from 'react';\nimport Question from '../Question';\nimport { Button, Box } from '@material-ui/core';\n\nconst Questions = ({\n  quizzes,\n  handleChangeCheck,\n  handleFinishGame,\n  started\n}) => (\n  <div className=\"Questions\">\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      width=\"100vw\"\n      height=\"auto\"\n      flexDirection=\"column\"\n    >\n      {\n        quizzes.map((item, index) => (\n          <Question\n            key={`${item.sentence}-${index}`}\n            sentence={item.sentence}\n            options={item.options}\n            handleChangeCheck={answer => handleChangeCheck(index, answer)}\n            finished={!started}\n          />\n        ))\n      }\n      {\n        started && (\n          <Box marginTop=\"30px\" marginBottom=\"30px\">\n            <Button variant=\"contained\" onClick={handleFinishGame} color=\"primary\">\n              Checar respostas\n            </Button>\n          </Box>   \n        )\n      }\n    </Box>\n  </div>  \n);\n\nexport default Questions;\n","import React from 'react';\n\nimport './index.scss';\n\nconst Loading  = () => (\n  <div className=\"Loading\">\n    <span className=\"Loading__spinner\"></span>\n  </div>\n);\n\nexport default Loading;\n","import React, { useContext } from 'react';\nimport { QuizzesContext } from '../../contexts/quizzes';\nimport { Box, Button } from '@material-ui/core';\nimport Questions from '../../components/Questions';\nimport Loading from '../../components/Loading';\n\nconst Main = () => {\n  const {\n    started,\n    handleStartGame,\n    quizzes,\n    handleChangeCheck,\n    handleFinishGame,\n    loading\n  } = useContext(QuizzesContext);\n\n  if (loading) return <Loading />\n\n  return (\n    <>\n      <Questions\n        quizzes={quizzes}\n        handleChangeCheck={handleChangeCheck}\n        handleFinishGame={handleFinishGame}\n        started={started}\n      />\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        width=\"100vw\"\n        height=\"auto\"\n        margin=\"10px 0\"\n      >\n        <Button\n          variant=\"contained\"\n          onClick={handleStartGame}\n          color=\"primary\"\n          disabled={started}\n        >\n          ComeÃ§ar!\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport Main from './pages/Main';\nimport { QuizzesProvider } from './contexts/quizzes';\n\nconst App = () => (\n  <QuizzesProvider>\n    <Main />\n  </QuizzesProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}